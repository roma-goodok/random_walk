x <- rnorm(1000, sd = 0.1, mean = 0.5)
y <- rnorm(1000, sd = 0.3, mean = 0.8)
plot(x,y)
install.packages("caret")
install.packages("dplyr")
library(swirl)
install.packages("swirl")
library(swirl)
install.packages("RCurl")
install.packages("RCurl")
install.packages("swirl")
library(swirl)
swirl()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
read.csv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mdf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "IN" | country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os = "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA, 10))
!is.na(c(3,5,NA, 10))
filter(cran, !is.na(r_version))
cran2 <- cfilter(cran, size:ip_id)
cran2 <- filter(cran, size:ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mg = size / 2^20)
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_nb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(swirl)
install.packages("swirl")
library(swirl)
library(swirl)
swirl()
swirl()
>InstallCourses
InstallCourses
?InstallCourses
uninstall_all_courses()
install_from_swirl("Exploratory_Data_Analysis")
install_from_swirl("Statistical_Inference")
install_from_swirl("Regression_Models")
swirl()
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
coinPlot(10)
coinPlot(1000)
coinPlot(10000)
qnorm(0.95)
0.6 + c(-1,1)*qnorm(0.975)*sqrt(0.6*0.4/100)
binom.test(60,100)$conf
binom.test(60,100)$conf.int
mywald(0.2)
ACCompar(20)
lamb
lamb <- 5/94.32
lamb +c(-1,1)*qnorm(0.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)
poisson.test(5,94.32)$conf
swirl()
swirl()
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(0.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g2 - g1
mean(difference)
s <- sd(difference)
mn + c(-1,1)*qt(0.975, 9)*s/sqrt(10
)
t.test(difference)$conf.inf
t.test(difference)$conf.int
sp <-(8-1)*15.34^2 + (21-1)*18.23^2
ns <- (8-1) + (21-1)
sp <- sqrt(sp/ns)
132.86 - 127.4 + c(-1,1)*qt(0.975, 8+21-2)*sp*sqrt(1/8 + 1/21)
132.86 - 127.4 + c(-1,1)*qt(0.975, ns)*sp*sqrt(1/8 + 1/21)
132.86 - 127.44 + c(-1,1)*qt(0.975, ns)*sp*sqrt(1/8 + 1/21)
sp <- sqrt((9*var(g1)+9*(var(g2)))/18)
sp <- sqrt((9*var(g1)+9*(var(g2)))/18)
sp <- sqrt((9*var(g1)+9*(var(g2))/18)
)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md + c(-1,1)*qt(0.975,18)*sp*sqrt(1/10 + 1/10)
t.test(g2, g1, paired = FALSE)
t.test(g2, g1, paired = FALSE, ver.equal=TRUE)$conf
t.test(g2, g1, paired = FALSE, ver.equal=TRUE)$conf.int
t.test(g2, g1, paired = FALSE, ver.equal=TRUE)$conf
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf.int
t.test(g2,g1,paired=TRUE)$conf
num <- sqrt(15.34/8 + 18.23/21)
num <- (15.34^2/8 + 18.23^2/21)^2
den <- (15.34^2/8)^2/(8-1) + ((18.23^2)/21)^2/(21-1)
mydf <- num/den
132.86-127.44 + c(-1,1)*qt(0.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
library(shiny)
library(shinyapps)
library(slidify)
setwd("/home/roma/p/coursera/devdataprod/random_walk")
author("random_walk")
slidify("index.Rmd")
setwd("/home/roma/p/coursera/devdataprod/random_walk")
slidify("index.Rmd")
browseURL("index.html")
publish_github("random_walk", "roma-goodok")
library(ggplot2)
head(ToothGrowth)
str(ToothGrowth)
g <- ggplot(data = ToothGrowth, aes(x = dose, y = len, colour = supp)) + geom_point()
g
g <- ggplot(data = ToothGrowth, aes(x = dose, y = len, colour = supp)) + geom_boxplot()
p <- ggplot(data = ToothGrowth, aes(x = factor(dose), y = len)) + geom_boxplot(aes(fill = factor(supp)))
p
lamb = 0.2
hist(rexp(100000, lamb))
theor_est <- lamb^(-1);
theor_var <- lamb^(-2)
theor_sigm <- sqrt(theor_var)
theor_est
theor_var
theor_sigm
library(ggplot2)
nosim <- 10000
cfunc_normalized <- function(x, n) sqrt(n) * (mean(x) - theor_est) / theor_sigm
dat_normalized <- data.frame(
x = c(apply(matrix(rexp(nosim * 10, 0.2),
nosim), 1, cfunc_normalized, 10),
apply(matrix(rexp(nosim * 40, 0.2),
nosim), 1, cfunc_normalized, 40),
apply(matrix(rexp(nosim * 160, 0.2),
nosim), 1, cfunc_normalized, 160)
),
size = factor(rep(c(10, 40, 160), rep(nosim, 3))))
g <- ggplot(dat_normalized, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
cfunc <- function(x, n) mean(x)
dat <- data.frame(
x = c(apply(matrix(rexp(nosim * 10, 0.2),
nosim), 1, cfunc, 10),
apply(matrix(rexp(nosim * 40, 0.2),
nosim), 1, cfunc, 40),
apply(matrix(rexp(nosim * 160, 0.2),
nosim), 1, cfunc, 160)
),
size = factor(rep(c(10, 40, 160), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm_exp, size = 2)
g + facet_grid(. ~ size)
nosim <- 10000
cfunc_normalized <- function(x, n) sqrt(n) * (mean(x) - theor_est) / theor_sigm
dat_normalized <- data.frame(
x = c(apply(matrix(rexp(nosim * 10, 0.2),
nosim), 1, cfunc_normalized, 10),
apply(matrix(rexp(nosim * 40, 0.2),
nosim), 1, cfunc_normalized, 40),
apply(matrix(rexp(nosim * 160, 0.2),
nosim), 1, cfunc_normalized, 160)
),
size = factor(rep(c(10, 40, 160), rep(nosim, 3))))
g <- ggplot(dat_normalized, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
lamb = 0.2
cfunc <- function(x, n) mean(x)
dat <- data.frame(
x = c(apply(matrix(rexp(nosim * 10, 0.2),
nosim), 1, cfunc, 10),
apply(matrix(rexp(nosim * 40, 0.2),
nosim), 1, cfunc, 40),
apply(matrix(rexp(nosim * 160, 0.2),
nosim), 1, cfunc, 160)
),
size = factor(rep(c(10, 40, 160), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm_exp, size = 2)
dnorm_exp<- function(x) {dnorm(x, 5, 5/sqrt(40))}
g <- g + stat_function(fun = dnorm_exp, size = 2)
g + facet_grid(. ~ size)
cfunc <- function(x, n) mean(x)
cfunc <- function(x, n) mean(x)
dat <- data.frame(
x = c(apply(matrix(rexp(nosim * sample_size, 0.2), nosim), 1, cfunc, sample_size)),
size = factor(rep(c(sample_size), rep(nosim, 1))))
cfunc <- function(x, n) mean(x)
x = c(apply(matrix(rexp(nosim * sample_size, 0.2), nosim), 1, cfunc, sample_size)),
x = c(apply(matrix(rexp(nosim * sample_size, 0.2), nosim), 1, cfunc, sample_size))
lamb <- 0.2
nosim <- 10000
sample_size <- 40
?lambda
cfunc <- function(x, n) mean(x)
dat <- data.frame(
x = c(apply(matrix(rexp(nosim * sample_size, lambda), nosim), 1, cfunc, sample_size)),
size = factor(rep(c(sample_size), rep(nosim, 1))))
lambda <- 0.2
nosim <- 10000
sample_size <- 40
theor_est <- lamb^(-1);
theor_var <- lamb^(-2)
theor_sigm <- sqrt(theor_var)
cfunc <- function(x, n) mean(x)
dat <- data.frame(
x = c(apply(matrix(rexp(nosim * sample_size, lambda), nosim), 1, cfunc, sample_size)),
size = factor(rep(c(sample_size), rep(nosim, 1))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm_exp, size = 2)
g + facet_grid(. ~ size)
dat$x
mean(dat$x)
var(dat$x)
?var
theor_var
sd(dat$x)
theor_sigm
theor_est <- 1/lambda;
theor_est <- 1/lambda;
theor_est <- 1/lambda;
theor_var <- lamb^(-2)
theor_sigm <- 1/lambda
theor_var
hist(dat$x)
theor_sigm/sqrt(sample_size)
sample_size
theor_sigm
theor_sigm/sqrt(sample_size)
cfunc <- function(x, n) mean(x)
x = c(apply(matrix(rexp(nosim * sample_size, lambda), nosim), 1, cfunc, sample_size))
x
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g
g <- g + stat_function(fun = dnorm_exp, size = 2)
g
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", fill = "blue", aes(y = ..density..))
g <- g + stat_function(fun = dnorm_exp, size = 2)
g
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", fill = "blue", aes(y = ..density..))
g <- g + stat_function(fun = dnorm_exp, size = 2) + labs(title = "Distribution of averages of 40 exponentials", x = "agerage of 40 exponentials")
g
g <- ggplot(dat, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", fill = "blue", aes(y = ..density..))
g <- g + labs(title = "Distribution of averages of 40 exponentials", x = "agerage of 40 exponentials")
g
?geom_vline
var(x)
sd(x)
var(x)/4
var(x)/40
sd(x)*40
sd(x)/40
1/lambda
5/40
5/sqrt(40)
24/40
g <- ggplot(x, aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", fill = "blue", aes(y = ..density..))
data.frame(x)
g <- ggplot(data.frame(x), aes(x = x)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", fill = "blue", aes(y = ..density..))
head(ToothGrowth)
str(ToothGrowth)
g <- ggplot(data = ToothGrowth, aes(x = dose, y = len, colour = supp)) + geom_point()
g
g <- ggplot(data = ToothGrowth, aes(x = dose, y = len, colour = supp)) + geom_boxplot()
g
p <- ggplot(data = ToothGrowth, aes(x = factor(dose), y = len)) + geom_boxplot(aes(fill = factor(supp)))
p
head(ToothGrowth)
str(ToothGrowth)
g <- ggplot(data = ToothGrowth, aes(x = dose, y = len, colour = supp)) + geom_point()
g
p <- ggplot(data = ToothGrowth, aes(x = factor(dose), y = len)) + geom_boxplot(aes(fill = factor(supp)))
p
g
summar(ToothGrowth)
summary(ToothGrowth)
g <- ggplot(data = ToothGrowth, aes(x = factor(dose), y = len)) + geom_boxplot(aes(fill = factor(supp)))
g + labs("ToothGrowth: boxplot for len values")
g <- ggplot(data = ToothGrowth, aes(x = factor(dose), y = len)) + geom_boxplot(aes(fill = factor(supp)))
g + labs(title = "ToothGrowth: boxplot for len values")
g <- ggplot(data = ToothGrowth, aes(x = dose, y = len, colour = supp)) + geom_point()
g + labs(title  = "ToothGrowth: all observations")
?pairwise.t.test
?t.test()
g <- ggplot(data = ToothGrowth, aes(x = factor(dose), y = len)) + geom_boxplot(aes(fill = factor(supp)))
g + labs(title = "ToothGrowth: boxplot for len values")
t.test(len ~ supp* dose, data = ToothGrowth)
t.test(len ~ supp, data = ToothGrowth)
t.test(len ~ dose, data = ToothGrowth)
t.test(len ~ supp, data = ToothGrowth)
as.factor(ToothGrowth$large_dose > 1)
as.factor(ToothGrowth$dose > 1)
?as.factor
ToothGrowth$large_dose = as.factor(ToothGrowth$dose > 1)
t.test(len ~ large_dose, data = ToothGrowth[ToothGrowth$d])
ToothGrowth$large_dose = as.factor(ToothGrowth$dose > 1)
ToothGrowth
t.test(len ~ large_dose, data = ToothGrowth[ToothGrowth$d])
t.test(len ~ large_dose, data = ToothGrowth)
ToothGrowth$dose > 1
ToothGrowth$large_dose = as.factor(ToothGrowth$dose > 1)
t.test(len ~ large_dose, data = ToothGrowth)
head(mtcars)
str(mtcars)
summary(mtcars)
?mtcars
str(mtcars)
summary(mtcars)
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=am)) + geom_point() + geom_facet(. ~ am)
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=am)) + geom_point() + geom_facets(. ~ am)
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=am)) + geom_point()
g
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=as.factor(am)))
g
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=as.factor(am))) + geom_point()
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=as.factor(am))) + geom_point()
g
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=as.factor(am))) + geom_facet( . ~ cyl)
?geom_facet
?geom_facets
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=as.factor(am))) + facets( . ~ cyl)
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=as.factor(am))) + facet( . ~ cyl)
g
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=as.factor(am))) + geom_point() + facet( . ~ cyl)
g
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=as.factor(am))) + geom_point() + facet( . ~ am)
g
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=as.factor(am))) + geom_point() + facet( ~ am)
g
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=as.factor(am))) + geom_point() + facet_wrap( ~ am)
g
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=as.factor(am))) + geom_point() + facet_wrap( ~ cyl)
g
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=as.factor(am))) + geom_point() + facet_wrap( ~ cyl)
g + labs(title = "Exploration of mtcars dataset. 4,6,8 - number of cylinders", x="wight (wt)", y = "Miles per gallon (mpg)")
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=as.factor(am))) + geom_point() + facet_wrap( ~ cyl)
g + labs(title = "Exploration of mtcars dataset.\n 4,6,8 - number of cylinders", x="wight (wt)", y = "Miles per gallon (mpg)")
g <- ggplot(data = mtcars, aes(x=wt, y=mpg, color=as.factor(am))) + geom_point() + facet_wrap( ~ cyl)
g + labs(title = "Exploration of mtcars dataset.\n 4,6,8 - number of cylinders", x="wight (wt)", y = "Miles per gallon (mpg)")
fit <- lm (mpg ~ ., data = mtcars)
fit
summary(fit)
fit <- lm (mpg ~ am, data = mtcars)
summary(fit)
fit <- lm (mpg ~ ., data = mtcars)
summary(fit)
fit <- lm (mpg ~ ., data = mtcars)
step<- step(fit, direction="backward", trace = FALSE)
step<- step(fit, direction="backward", trace = TRUE)
summary(step)$coeff
summary(step)$coeff
?step
fit <- lm (mpg ~ ., data = mtcars)
summary(fit)
fit$coefficients
str(fit)
fit <- lm (mpg ~ am + qsec + wt + hp , data = mtcars)
summary(fit)
fit <- lm (mpg ~ am + qsec + wt , data = mtcars)
summary(fit)
fit <- lm (mpg ~ ., data = mtcars)
step <- step(fit, direction="backward", trace = TRUE)
summary(step)$coeff
fit <- lm (mpg ~ ., data = mtcars)
step <- step(fit, direction="backward", trace = TRUE)
summary(step)$coeff
fit <- lm (mpg ~ ., data = mtcars)
fit <- lm (mpg ~ ., data = mtcars)
summary(fit)
summary(fit)
step<- step(fit, direction="backward", trace = FALSE)
summary(step)$coeff
summary(step)
fit_full <- lm (mpg ~ ., data = mtcars)
summary(fit)
fit_selected <- step(fit, direction="backward", trace = FALSE)
summary(fit_selected)
fit_selected$coefficients
fit_selected$coefficients[1]
fit_selected$coefficients[4]
mean(mtcars[mtcars$am==1, "mpg"]) - mean(mtcars[mtcars$am==0, "mpg"]
mean(mtcars[mtcars$am==1, "mpg"]) - mean(mtcars[mtcars$am==0, "mpg"])
mean(mtcars[mtcars$am==1, "mpg"]) - mean(mtcars[mtcars$am==0, "mpg"])
